variables:
- name: BuildParameters.solution
  value: '**\*.sln'
- name: TestProject
  value: '**/*UnitTests.csproj'

name: v$(Major).$(Minor).$(Patch)

trigger:
- master

pool:
  vmImage: windows-latest

steps:
  - task: DotNetCoreCLI@2
    displayName: "Build Solution"
    inputs:
      command: 'build'
      projects: $(BuildParameters.solution)
      arguments: /p:Configuration=$(BuildConfiguration) 
  - task: DotNetCoreCLI@2
    displayName: "Run Unit Tests"
    inputs:
      command: 'test'
      projects: $(TestProject)
      arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage"'
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: $(Agent.TempDirectory)/*/coverage.cobertura.xml # using ** instead of * finds duplicate coverage files
  - task: DotNetCoreCLI@2
    displayName: "Pack Project"
    inputs:
      command: 'pack'
      packagesToPack: '**/*.csproj'
      versioningScheme: byEnvVar
      versionEnvVar: PackageVersion
  - task: GitHubRelease@1
    displayName: "Publish Relase To GitHub"
    inputs:
      gitHubConnection: 'GitHub PAT'
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: '$(Build.BuildNumber)'
      title: '$(Build.BuildNumber) - $(BuildConfiguration) - $(Build.SourceBranchName)'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'