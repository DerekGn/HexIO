//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HexIO.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HexIO.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be less than [{0:X}].
        /// </summary>
        internal static string DataMustBeLessThan {
            get {
                return ResourceManager.GetString("DataMustBeLessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The EOF record has been reached.
        /// </summary>
        internal static string Eof {
            get {
                return ResourceManager.GetString("Eof", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Not Found.
        /// </summary>
        internal static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal line start character.
        /// </summary>
        internal static string IllegalStartCharacter {
            get {
                return ResourceManager.GetString("IllegalStartCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checksum incorrect. Expected [0x{0:X}] Actual: [0x{1:X}].
        /// </summary>
        internal static string InvalidChecksum {
            get {
                return ResourceManager.GetString("InvalidChecksum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid Hex record has been read from the stream. Value: [{0}].
        /// </summary>
        internal static string InvalidHexRecord {
            get {
                return ResourceManager.GetString("InvalidHexRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hex record line length [{0}] is less than {1}.
        /// </summary>
        internal static string InvalidHexRecordLength {
            get {
                return ResourceManager.GetString("InvalidHexRecordLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hex record bytes does not have required length of [0x{0:X4}].
        /// </summary>
        internal static string InvalidLength {
            get {
                return ResourceManager.GetString("InvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid record type value: [0x{0:X2}].
        /// </summary>
        internal static string InvalidRecordType {
            get {
                return ResourceManager.GetString("InvalidRecordType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal line start character [{0}].
        /// </summary>
        internal static string InvalidStartCharacter {
            get {
                return ResourceManager.GetString("InvalidStartCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be maximum of [0x{0:X}] bytes.
        /// </summary>
        internal static string MaximumDataSize {
            get {
                return ResourceManager.GetString("MaximumDataSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be maximum of [0x{0:X}] bytes.
        /// </summary>
        internal static string MaximumRecordSize {
            get {
                return ResourceManager.GetString("MaximumRecordSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be minimum of [0x{0:X}] bytes.
        /// </summary>
        internal static string MinimumRecordSize {
            get {
                return ResourceManager.GetString("MinimumRecordSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream is empty.
        /// </summary>
        internal static string StreamEmpty {
            get {
                return ResourceManager.GetString("StreamEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must contain one or more transforms.
        /// </summary>
        internal static string TransformsExpected {
            get {
                return ResourceManager.GetString("TransformsExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to extract bytes for [{0}].
        /// </summary>
        internal static string UnableToExtract {
            get {
                return ResourceManager.GetString("UnableToExtract", resourceCulture);
            }
        }
    }
}
